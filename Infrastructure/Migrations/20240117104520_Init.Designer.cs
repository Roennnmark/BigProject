// <auto-generated />
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240117104520_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entities.BirthDatesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirthDay")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BirthMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("BirthDates");
                });

            modelBuilder.Entity("Infrastructure.Entities.FootballClubsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrentClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FootballClubs");
                });

            modelBuilder.Entity("Infrastructure.Entities.FootballPlayersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirthDatesId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("FootballClubId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NationalitiesId")
                        .HasColumnType("int");

                    b.Property<int>("PositionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirthDatesId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FootballClubId");

                    b.HasIndex("NationalitiesId");

                    b.HasIndex("PositionsId");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("Infrastructure.Entities.NationalitiesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("Infrastructure.Entities.PositionsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Infrastructure.Entities.FootballPlayersEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.BirthDatesEntity", "BirthDates")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("BirthDatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.FootballClubsEntity", "FootballClub")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("FootballClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.NationalitiesEntity", "Nationalities")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("NationalitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.PositionsEntity", "Positions")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("PositionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BirthDates");

                    b.Navigation("FootballClub");

                    b.Navigation("Nationalities");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Infrastructure.Entities.BirthDatesEntity", b =>
                {
                    b.Navigation("FootballPlayers");
                });

            modelBuilder.Entity("Infrastructure.Entities.FootballClubsEntity", b =>
                {
                    b.Navigation("FootballPlayers");
                });

            modelBuilder.Entity("Infrastructure.Entities.NationalitiesEntity", b =>
                {
                    b.Navigation("FootballPlayers");
                });

            modelBuilder.Entity("Infrastructure.Entities.PositionsEntity", b =>
                {
                    b.Navigation("FootballPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
